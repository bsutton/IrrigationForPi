#]!/bin/dash
#set -x

# If no arguments, print usage statement & exit from function
if [ "$#" -ne "2" ]; then
	echo
	echo "Usage: getcert <emailaddress> <fqdn> "
	echo
	echo "Runs runs certbot to obtain an SSL certificate for <fqdn>."
	echo  The email address is used by letsencrypt to notify you of certificate issues.
	echo
	echo "<emailaddress> the email address for letsencrypt to send notifications to"
	echo "<fqdn> the fqdn to request a certificate for."
	exit 1 
fi


EMAIL=$1
FQDN=$2

# generate random password for keystore
KEYSTOREPWD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

mkdir -p /etc/letsencrypt/live/${FQDN}


# run cert bot to obtain certificates
# certbot certonly \
	# --standalone \
	# --noninteractive \
	# --domain ${FQDN} \
	# --agree-tos \
	# --email ${EMAIL} \
	# --cert-path /etc/letsencrypt/live/${fQDN} \
	# --key-path  /etc/letsencrypt/live/${fQDN} \
	# --fullchain-path  /etc/letsencrypt/live/${fQDN} \
	# --dry-run \
	# --test-cert \
	# --no-verify-ssl


mkdir -p /etc/tomcat8/keystore

# create pkcs12 store
openssl pkcs12 -export \
  -in /etc/letsencrypt/live/${FQDN}/fullchain.pem \
  -inkey /etc/letsencrypt/live/${FQDN}/privkey.pem \
  -out /etc/tomcat8/keystore/${FQDN}.p12 \
 -password pass:${KEYSTOREPWD}

# import pkcs12 store int java keystore.
keytool -importkeystore \
 -noprompt \
 -srckeystore /etc/tomcat8/keystore/${FQDN}.p12 \
 -srcstoretype pkcs12 \
 -srcstorepass ${KEYSTOREPWD} \
 -destkeystore /etc/tomcat8/keystore/${FQDN}.keystore \
 -deststoretype jks \
 -deststorepass ${FQDN}

 # overwrite the default tomcat config file with our SSL enabled one along with the keystore password
#sed  -e 's/%FQDN%/'${FQDN}'/g' \
	#-e 's/%KEYSTOREPWD%/'${KEYSTOREPWD}'/g' \
	#< tomcat-server-with-ssl.xml \
	#> /conf/server.xml

snap restart ${SNAPNAME}

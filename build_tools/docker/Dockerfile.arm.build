# used to build the dart exes required to install on a raspberry pi
# 
# Trying to build dart execs on a pi is just too slow
# hence we do the build in a docker image on our
# development box.

# docker image instructions came from.
# https://hub.docker.com/r/balenalib/raspberrypi4-64-debian


# FROM balenalib/raspberrypi4-64-ubuntu:latest
FROM balenalib/raspberrypi4-64-ubuntu-openjdk:latest
# replace this with your application


# install build tools
# && apt install --no-install-recommends -y openjdk-8-jdk-headless maven git \

RUN apt update \
    && apt install --no-install-recommends -y \
    wget \
    git \
    maven \
    unzip \
    && rm -rf /var/lib/apt/lists/*

RUN wget https://storage.googleapis.com/dart-archive/channels/be/raw/latest/sdk/dartsdk-linux-arm64-release.zip --output-document=dart.zip
RUN unzip dart.zip

# add dart to the path.
ENV PATH="$PATH:/dart-sdk/bin"



RUN mkdir -p /BUILD_TOKEN/60445f53676348309815e26a612faaff
RUN git clone https://github.com/bsutton/IrrigationForPi.git


# build the java webapp
WORKDIR /IrrigationForPi

# RUN mvn -T 1C -B dependency:go-offline
# RUN mvn -T 1C -B package -D skipTests

WORKDIR /IrrigationForPi/build_tools

RUN dart pub get
RUN dart compile exe bin/pig_build.dart
RUN dart compile exe bin/pig_install.dart
RUN dart compile exe bin/pig_reconfigure.dart
RUN dart compile exe bin/pig_start.dart
RUN dart compile exe bin/pig_stop.dart
# RUN dart bin/pig_build.dart --current --no-tools --no-full --docker --quick
# RUN dart bin/pig_install.dart

